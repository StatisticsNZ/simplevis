% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_hbar.R
\name{ggplot_hbar}
\alias{ggplot_hbar}
\title{Horizontal bar ggplot.}
\usage{
ggplot_hbar(data, x_var, y_var, text_var = NULL, pal = NULL,
  width = 0.75, alpha = 1, line_size = 0.5, title = "[Title]",
  title_wrap = 70, subtitle = NULL, subtitle_wrap = 80,
  x_balance = FALSE, x_expand = NULL, x_labels = waiver(),
  x_na_inf = FALSE, x_pretty_n = 6, x_title = "[X title]",
  x_title_wrap = 50, x_trans = "identity", x_zero = TRUE,
  x_zero_line = NULL, y_expand = NULL, y_labels = NULL,
  y_rev = FALSE, y_title = "[Y title]", y_title_wrap = 50,
  caption = NULL, caption_wrap = 80, font_family = "Helvetica",
  font_size_title = NULL, font_size_body = NULL, isMobile = FALSE)
}
\arguments{
\item{data}{A tibble or dataframe. Required input.}

\item{x_var}{Unquoted numeric variable to be on the x axis. Required input.}

\item{y_var}{Unquoted categorical variable to be on the y axis. Required input.}

\item{text_var}{Unquoted variable to be used as a customised tooltip in combination with plotly::ggplotly(plot, tooltip = "text"). Defaults to NULL.}

\item{pal}{Character vector of hex codes. Defaults to viridis. Use the pals package to find a suitable palette.}

\item{width}{Width of bars. Defaults to 0.75.}

\item{alpha}{The alpha of the fill. Defaults to 1.}

\item{line_size}{The size of the outlines of bars.}

\item{title}{Title string. Defaults to [Title].}

\item{title_wrap}{Number of characters to wrap the title to. Defaults to 70. Not applicable where isMobile equals TRUE.}

\item{subtitle}{Subtitle string. Defaults to [Subtitle].}

\item{subtitle_wrap}{Number of characters to wrap the subtitle to. Defaults to 80. Not applicable where isMobile equals TRUE.}

\item{x_balance}{Add balance to the x axis so that zero is in the centre of the x scale.}

\item{x_expand}{A vector of range expansion constants used to add some padding on the x scale.}

\item{x_labels}{Adjust the  x scale labels through a function or vector.}

\item{x_na_inf}{TRUE or FALSE of whether to make NA x_var values infinity with a light grey colour to emphasise them. Defaults to FALSE.}

\item{x_pretty_n}{The desired number of intervals on the x axis, as calculated by the pretty algorithm. Defaults to 6. Not applicable where isMobile equals TRUE.}

\item{x_title}{X axis title string. Defaults to [X title].}

\item{x_title_wrap}{Number of characters to wrap the x title to. Defaults to 50. Not applicable where isMobile equals TRUE.}

\item{x_trans}{A string specifying a transformation for the x axis scale. Defaults to "identity".}

\item{x_zero}{TRUE or FALSE whether the minimum of the x scale is zero. Defaults to TRUE.}

\item{x_zero_line}{TRUE or FALSE whether to add a zero reference line to the x axis. Defaults to NULL, which is TRUE if there are positive and negative values in x_var. Otherwise it is FALSE.}

\item{y_expand}{A vector of range expansion constants used to add some padding on the y scale.}

\item{y_labels}{Adjust the  y scale labels through a function or vector.}

\item{y_rev}{TRUE or FALSE of whether bar order from top to bottom is reversed from default. Defaults to FALSE.}

\item{y_title}{Y axis title string. Defaults to [Y title].}

\item{y_title_wrap}{Number of characters to wrap the y title to. Defaults to 50. Not applicable where isMobile equals TRUE.}

\item{caption}{Caption title string. Defaults to NULL.}

\item{caption_wrap}{Number of characters to wrap the caption to. Defaults to 80. Not applicable where isMobile equals TRUE.}

\item{font_family}{Font family to use. Defaults to "Helvetica".}

\item{font_size_title}{Font size for the title text. Defaults to 11.}

\item{font_size_body}{Font size for all text other than the title. Defaults to 10.}

\item{isMobile}{Whether the plot is to be displayed on a mobile device. Defaults to FALSE. If within an app with the mobileDetect function, then use isMobile = input$isMobile.}
}
\value{
A ggplot object.
}
\description{
Horizontal bar ggplot that is not coloured and not facetted.
}
\examples{
library(dplyr)

plot_data <- ggplot2::diamonds \%>\%
  mutate(cut = stringr::str_to_sentence(cut)) \%>\%
  group_by(cut) \%>\%
  summarise(average_price = mean(price)) \%>\%
  mutate(average_price = round(average_price / 1000, 1)) 

ggplot_hbar(plot_data, average_price, cut,
   title = "Average diamond price by cut",
   x_title = "Average price ($US thousands)",
   y_title = "Cut")

}
