% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_scatter_fun.R
\name{ggplot_scatter_col_facet}
\alias{ggplot_scatter_col_facet}
\title{Scatter ggplot that is coloured and facetted.}
\usage{
ggplot_scatter_col_facet(data, x_var, y_var, col_var, facet_var,
  tip_var = NULL, col_method = NULL, col_cuts = NULL,
  col_na_remove = FALSE, quantile_by_facet = TRUE, size = 1,
  pal = NULL, pal_rev = FALSE, x_zero = TRUE, x_zero_line = TRUE,
  x_trans = "identity", x_labels = waiver(), x_pretty_n = 5,
  y_zero = TRUE, y_zero_line = TRUE, y_trans = "identity",
  y_labels = waiver(), y_pretty_n = 5, col_drop = FALSE,
  facet_scales = "fixed", facet_nrow = NULL, legend_ncol = 3,
  legend_digits = 1, title = "[Title]", subtitle = NULL,
  x_title = "[X title]", y_title = "[Y title]", col_title = "",
  caption = NULL, legend_labels = NULL, font_family = "Helvetica",
  font_size_title = NULL, font_size_body = NULL, wrap_title = 70,
  wrap_subtitle = 80, wrap_x_title = 50, wrap_y_title = 50,
  wrap_col_title = 25, wrap_caption = 80, isMobile = FALSE)
}
\arguments{
\item{data}{An ungrouped summarised tibble or dataframe. Required input.}

\item{x_var}{Unquoted numeric variable to be on the x axis. Required input.}

\item{y_var}{Unquoted numeric variable to be on the y axis. Required input.}

\item{col_var}{Unquoted variable for points to be coloured by. Required input.}

\item{facet_var}{Unquoted categorical variable to facet the data by. Required input.}

\item{tip_var}{Unquoted variable to be used as a customised tooltip in combination with plotly::ggplotly(plot). Defaults to NULL.}

\item{col_method}{The method of colouring features, either "bin", "quantile" or "category." If numeric, defaults to "quantile".}

\item{col_cuts}{A vector of cuts to colour a numeric variable. If "bin" is selected, the first number in the vector should be either -Inf or 0, and the final number Inf. If "quantile" is selected, the first number in the vector should be 0 and the final number should be 1. Defaults to quartiles.}

\item{col_na_remove}{TRUE or FALSE of whether to remove NAs of the colour variable. Defaults to FALSE.}

\item{quantile_by_facet}{TRUE of FALSE whether quantiles should be calculated for each group of the facet variable. Defaults to TRUE.}

\item{size}{Size of points. Defaults to 1.}

\item{pal}{Character vector of hex codes. Defaults to NULL, which selects the Stats NZ palette or viridis.}

\item{pal_rev}{Reverses the palette. Defaults to FALSE.}

\item{x_zero}{TRUE or FALSE whether the minimum of the x scale is zero. Defaults to TRUE.}

\item{x_zero_line}{TRUE or FALSE whether to add a zero line in for when values are above and below zero. Defaults to TRUE.}

\item{x_trans}{A string specifying a transformation for the x scale. Defaults to "identity".}

\item{x_labels}{Argument to adjust the format of the x scale labels.}

\item{x_pretty_n}{The desired number of intervals on the x axis, as calculated by the pretty algorithm. Defaults to 5. Not applicable where isMobile equals TRUE.}

\item{y_zero}{TRUE or FALSE whether the minimum of the y scale is zero. Defaults to TRUE.}

\item{y_zero_line}{TRUE or FALSE whether to add a zero line in for when values are above and below zero. Defaults to TRUE.}

\item{y_trans}{A string specifying a transformation for the y scale. Defaults to "identity".}

\item{y_labels}{Argument to adjust the format of the y scale labels.}

\item{y_pretty_n}{The desired number of intervals on the y axis, as calculated by the pretty algorithm. Defaults to 5.}

\item{col_drop}{TRUE or FALSE of whether to drop unused levels from the legend. Defaults to FALSE.}

\item{facet_scales}{Whether facet_scales should be "fixed" across facets, "free" in both directions, or free in just one direction (i.e. "free_x" or "free_y"). Defaults to "fixed".}

\item{facet_nrow}{The number of rows of facetted plots. Defaults to NULL, which generally chooses 2 rows. Not applicable to where isMobile is TRUE.}

\item{legend_ncol}{The number of columns in the legend.}

\item{legend_digits}{Select the appropriate number of decimal places for numeric variable auto legend labels. Defaults to 1.}

\item{title}{Title string. Defaults to "[Title]".}

\item{subtitle}{Subtitle string. Defaults to "[Subtitle]".}

\item{x_title}{X axis title string. Defaults to "[X title]".}

\item{y_title}{Y axis title string. Defaults to "[Y title]".}

\item{col_title}{Colour title string for the legend. Defaults to NULL.}

\item{caption}{Caption title string. Defaults to NULL.}

\item{legend_labels}{A vector of manual legend label values. Defaults to NULL, which results in automatic labels.}

\item{font_family}{Font family to use. Defaults to "Helvetica".}

\item{font_size_title}{Font size for the title text. Defaults to 11.}

\item{font_size_body}{Font size for all text other than the title. Defaults to 10.}

\item{wrap_title}{Number of characters to wrap the title to. Defaults to 70. Not applicable where isMobile equals TRUE.}

\item{wrap_subtitle}{Number of characters to wrap the subtitle to. Defaults to 80. Not applicable where isMobile equals TRUE.}

\item{wrap_x_title}{Number of characters to wrap the x title to. Defaults to 50. Not applicable where isMobile equals TRUE.}

\item{wrap_y_title}{Number of characters to wrap the y title to. Defaults to 50. Not applicable where isMobile equals TRUE.}

\item{wrap_col_title}{Number of characters to wrap the colour title to. Defaults to 25. Not applicable where isMobile equals TRUE.}

\item{wrap_caption}{Number of characters to wrap the caption to. Defaults to 80. Not applicable where isMobile equals TRUE.}

\item{isMobile}{Whether the plot is to be displayed on a mobile device. Defaults to FALSE. If within an app with the mobileDetect function, then use isMobile = input$isMobile.}
}
\value{
A ggplot object.
}
\description{
Scatter ggplot that is coloured and facetted.
}
\examples{
library(dplyr)

plot_data <- ggplot2::diamonds \%>\%
  sample_frac(0.05) \%>\%
  mutate(cut = stringr::str_to_sentence(cut))

plot <- ggplot_scatter_col_facet(data = plot_data, x_var = carat, y_var = price, col_var = color,
                                 facet_var = cut)

plot

plotly::ggplotly(plot)
}
